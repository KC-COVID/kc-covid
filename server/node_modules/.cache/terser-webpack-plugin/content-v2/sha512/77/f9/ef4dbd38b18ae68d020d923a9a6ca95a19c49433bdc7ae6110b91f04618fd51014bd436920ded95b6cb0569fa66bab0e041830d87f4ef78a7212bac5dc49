{"map":"{\"version\":3,\"sources\":[\"server.js\"],\"names\":[\"modules\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"eval\",\"__webpack_exports__\"],\"mappings\":\"CAAS,SAAUA,GAET,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAJ,EAAQG,GAAUK,KAAKH,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBO,EAAIT,EAGxBE,EAAoBQ,EAAIT,EAGxBC,EAAoBS,EAAI,SAASP,EAASQ,EAAMC,GAC3CX,EAAoBY,EAAEV,EAASQ,IAClCG,OAAOC,eAAeZ,EAASQ,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEX,EAAoBiB,EAAI,SAASf,GACX,oBAAXgB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeZ,EAASgB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeZ,EAAS,aAAc,CAAEkB,OAAO,KAQvDpB,EAAoBqB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQpB,EAAoBoB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAzB,EAAoBiB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOpB,EAAoBS,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRxB,EAAoB4B,EAAI,SAASzB,GAChC,IAAIQ,EAASR,GAAUA,EAAOoB,WAC7B,WAAwB,OAAOpB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBS,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRX,EAAoBY,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG9B,EAAoBiC,EAAI,IAIjBjC,EAAoBA,EAAoBkC,EAAI,GAnFpD,CAsFC,CAEJ,SAAU/B,OAAQD,SAExBiC,KAAK,iZAIC,SAAUhC,OAAQD,SAExBiC,KAAK,4ZAIC,SAAUhC,OAAQD,SAExBiC,KAAK,iaAIC,SAAUhC,OAAQD,SAExBiC,KAAK,2YAIC,SAAUhC,OAAQD,SAExBiC,KAAK,kbAIC,SAAUhC,OAAQiC,oBAAqBpC,qBAE7C,aACAmC,KAAK\"}","code":"!function(e){var c={};function Q(s){if(c[s])return c[s].exports;var n=c[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,Q),n.l=!0,n.exports}Q.m=e,Q.c=c,Q.d=function(e,c,s){Q.o(e,c)||Object.defineProperty(e,c,{enumerable:!0,get:s})},Q.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},Q.t=function(e,c){if(1&c&&(e=Q(e)),8&c)return e;if(4&c&&\"object\"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(Q.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:e}),2&c&&\"string\"!=typeof e)for(var n in e)Q.d(s,n,function(c){return e[c]}.bind(null,n));return s},Q.n=function(e){var c=e&&e.__esModule?function(){return e.default}:function(){return e};return Q.d(c,\"a\",c),c},Q.o=function(e,c){return Object.prototype.hasOwnProperty.call(e,c)},Q.p=\"/\",Q(Q.s=5)}([function(module,exports){eval('module.exports = require(\"path\");//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwYXRoXCI/NzRiYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGF0aFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///0\\n')},function(module,exports){eval('module.exports = require(\"express\");//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJleHByZXNzXCI/MjJmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///1\\n')},function(module,exports){eval('module.exports = require(\"airtable\");//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJhaXJ0YWJsZVwiPzQxYzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImFpcnRhYmxlXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///2\\n')},function(module,exports){eval('module.exports = require(\"fs\");//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJmc1wiP2E0MGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImZzXCIpOyJdLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///3\\n')},function(module,exports){eval('module.exports = require(\"node-geocoder\");//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJub2RlLWdlb2NvZGVyXCI/N2NiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibm9kZS1nZW9jb2RlclwiKTsiXSwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///4\\n')},function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"// ESM COMPAT FLAG\\n__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: external \\\"path\\\"\\nvar external_path_ = __webpack_require__(0);\\nvar external_path_default = /*#__PURE__*/__webpack_require__.n(external_path_);\\n\\n// EXTERNAL MODULE: external \\\"express\\\"\\nvar external_express_ = __webpack_require__(1);\\nvar external_express_default = /*#__PURE__*/__webpack_require__.n(external_express_);\\n\\n// EXTERNAL MODULE: external \\\"airtable\\\"\\nvar external_airtable_ = __webpack_require__(2);\\nvar external_airtable_default = /*#__PURE__*/__webpack_require__.n(external_airtable_);\\n\\n// EXTERNAL MODULE: external \\\"fs\\\"\\nvar external_fs_ = __webpack_require__(3);\\n\\n// CONCATENATED MODULE: ./src/server/readKeys.js\\nconst path = __webpack_require__(0);\\n\\n\\n/**\\n * Opens the keys file and parses the JSON from it.\\n * @returns JSON The json from the keys file.\\n */\\n\\n/* harmony default export */ var readKeys = (() => JSON.parse(Object(external_fs_[\\\"readFileSync\\\"])(path.join(__dirname, 'keys.json'))));\\n// EXTERNAL MODULE: external \\\"node-geocoder\\\"\\nvar external_node_geocoder_ = __webpack_require__(4);\\nvar external_node_geocoder_default = /*#__PURE__*/__webpack_require__.n(external_node_geocoder_);\\n\\n// CONCATENATED MODULE: ./src/server/resourceHelper.js\\n\\n\\nconst geocodeOptions = {\\n  provider: 'google',\\n  apiKey: readKeys().googleApiKey\\n};\\nconst geocoder = external_node_geocoder_default()(geocodeOptions);\\nconst RESOURCES_TABLE = 'Community Resources';\\nconst resourcesTableFilter = '{ReviewStatus} = \\\"Approved\\\"';\\nconst resourceFieldsToGet = ['UID', 'name', 'website', 'description', 'type', 'reviewStatus', 'restrictions', 'addressLine1', 'addressLine2', 'city', 'state', 'zip', 'phoneNumber', 'emailAddress'];\\n/**\\n * Builds the response for retrieving resources from airtable. Attempts to asynchronously get the latitude and longitude\\n * for the resource.\\n * @param resource The resource to build a response for (Required).\\n * @return {Promise} The promsie that will return the parsed resource object on resolving.\\n */\\n\\nasync function buildResouceResponse(resource) {\\n  if (!resource) {\\n    return null;\\n  }\\n\\n  try {\\n    const geocode = await geocoder.geocode({\\n      address: resource.addressLine1,\\n      country: 'USA',\\n      zipcode: resource.zip\\n    });\\n\\n    if (geocode && geocode[0]) {\\n      return { ...resource,\\n        latitude: geocode[0].latitude,\\n        longitude: geocode[0].longitude\\n      };\\n    }\\n\\n    return resource;\\n  } catch (error) {\\n    console.log(`Error trying to build resource with UID ${resource ? resource.UID : 'NULL'}. \\\\n Error message: ${error.message} \\\\n Throwing out.`);\\n    return null;\\n  }\\n}\\n// CONCATENATED MODULE: ./src/server/server.js\\n\\n\\n\\n\\n\\nconst app = external_express_default()();\\nconst DIST_DIR = __dirname;\\nconst HTML_FILE = external_path_default.a.join(DIST_DIR, '../client/dist/index.html');\\napp.use(external_express_default.a.static(external_path_default.a.join(DIST_DIR, '../client/dist'))); // Gets the resources currently available\\n\\napp.get('/data/resources', (req, res) => {\\n  const keys = readKeys();\\n  const base = new external_airtable_default.a().base(keys.resourcesBaseId);\\n  const selectCriteria = {\\n    fields: resourceFieldsToGet,\\n    filterByFormula: resourcesTableFilter\\n  };\\n  base(RESOURCES_TABLE).select(selectCriteria).all().then(responses => {\\n    const responsePromises = responses.map(response => buildResouceResponse(response.fields)); // Because geocoding returns a promise we have to await, buildResourceResponse also returns a promise, so we\\n    // have to wait for all of those to be completed before sending our response.\\n\\n    Promise.all(responsePromises).then(parsedResponses => {\\n      res.send({\\n        resources: parsedResponses\\n      });\\n    });\\n  }).catch(error => {\\n    console.log(error);\\n    res.status(422).end();\\n  });\\n});\\napp.get('*', (req, res) => {\\n  res.sendFile(HTML_FILE);\\n});\\nconst PORT = process.env.PORT || 8080;\\napp.listen(PORT, () => {\\n  console.log(`App listening to ${PORT}....`);\\n  console.log('Press Ctrl+C to quit.');\\n  const keys = readKeys();\\n  external_airtable_default.a.configure({\\n    apiKey: keys.airtableApiKey\\n  });\\n});//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///5\\n\")}]);","extractedComments":[]}